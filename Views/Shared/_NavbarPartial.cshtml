@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@if (User.Identity.IsAuthenticated == false)
{
    <a class="logo" asp-action="Index" asp-controller="Home"> Hotel </a>
}
else
{
    @if (User.IsInRole("Admin"))
    {
        <a class="logo" asp-action="Index" asp-controller="AdminHotels"> Hotel </a>
    }
    else
    {
        <a class="logo" asp-action="Index" asp-controller="Home"> Hotel </a>
    }
}
<nav class="navbar">
    @if (User.Identity.IsAuthenticated == false)
    {
        <a class="home" asp-action="Index" asp-controller="Home">Home</a> 
        <a asp-action="Trips" asp-controller="Hotel">Trips</a>
        <a asp-action="FavHotels" asp-controller="Hotel">Fav-Hotels</a>
        <a asp-action="Login" asp-controller="Account">Sign In</a>
    }
    else
    {
        @if (User.IsInRole("Admin"))
        {
            <a class="home" asp-action="Index" asp-controller="AdminHotels">Home</a>
            <a asp-action="AddHotel" asp-controller="Hotel">Add Hotel</a>
        }
        else
        {
            <a class="home" asp-action="Index" asp-controller="Home">Home</a>
            <a asp-action="Trips" asp-controller="Hotel">Trips</a>
            <a asp-action="FavHotels" asp-controller="Hotel">Fav-Hotels</a>
        }
        <a asp-action="UserProfile" asp-controller="Home" asp-route-UserId="@User.FindFirstValue(ClaimTypes.NameIdentifier)">@User.Identity.Name</a>
        <a asp-action="FLogout" asp-controller="Account">Logout</a>
    }
</nav>